static_cast可用于基本类型转换、有继承关系的类指针或引用之间的转换、将空指针转换为其他类型的指针。
用于基本类型转换时，只进行合理的转换，而非强制类型转换，更加明确，更加安全。
iomanip头文件下的fixed是一个流操纵符，用于指定浮点数输出采用固定点表示法。
单用setpricision时，指定浮点数输出的有效位数，含整数部分和小数部分，将fixed与setpricision结合使用，指定的是小数点后的位数。
#include<iostream>
#include<iomanip>
using namespace std;
int main(){
    int n,d;
    double e;
    cin>>n>>e>>d;
    int mayNull=0;
    int definitelyNull=0;
    for(int i=0;i<n;i++){
        int k,days=0;
        cin>>k;
        for(int j=0;j<k;j++){
            double tmp;
            cin>>tmp;
            if(tmp<e)
                days++;
        }
        if(days>k/2){
            mayNull++;
            if(k>d){
                definitelyNull++;
                mayNull--;
            }
        }
    }
    double rate1=static_cast<double>(mayNull)/n*100;
    double rate2=static_cast<double>(definitelyNull)/n*100;
    cout<<fixed<<setprecision(1)<<rate1<<"% "<<rate2<<"%"<<endl;
    return 0;
}
