#include<iostream>
#include<algorithm>
using namespace std;
string reverseString(const string& num){
    string res=num;
    reverse(res.begin(),res.end());
    return res;
}
string addStrings(const string& num1,const string& num2){
    string res="";
    int carry=0;
    int i=num1.length()-1,j=num2.length()-1;
    while(i>=0||j>=0||carry){
        int sum=carry;
        if(i>=0){
            sum+=num1[i]-'0';
            i--;
        }
        if(j>=0){
            sum+=num2[j]-'0';
            j--;
        }
        res.push_back(sum%10+'0');
        carry=sum/10;
    }
    reverse(res.begin(),res.end());
    return res;
}
bool isPalindromicNum(const string& num){
    int left=0,right=num.length()-1;
    while(left<right){
        if(num[left]!=num[right]){
            return false;
        }
        left++;
        right--;
    }
    return true;
}
int main(){
    string num;
    cin>>num;
    if(isPalindromicNum(num)){
        cout<<num<<" is a palindromic number."<<endl;
        return 0;
    }
    for(int i=0;i<10;i++){
        string num2=reverseString(num);
        string sum=addStrings(num,num2);
        cout<<num<<" + "<<num2<<" = "<<sum<<endl;
        if(isPalindromicNum(sum)){
            cout<<sum<<" is a palindromic number."<<endl;
            return 0;
        }
        num=sum;
    }
    cout<<"Not found in 10 iterations."<<endl;
    return 0;
}
